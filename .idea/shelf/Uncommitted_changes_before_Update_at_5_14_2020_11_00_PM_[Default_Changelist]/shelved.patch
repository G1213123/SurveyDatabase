Index: web_interface/surveydb/bokehMap/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"surveydb URL Configuration\r\n\r\nThe `urlpatterns` list routes URLs to views. For more information please see:\r\n    https://docs.djangoproject.com/en/3.0/topics/http/urls/\r\nExamples:\r\nFunction views\r\n    1. Add an import:  from my_app import views\r\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\r\nClass-based views\r\n    1. Add an import:  from other_app.views import Home\r\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\r\nIncluding another URLconf\r\n    1. Import the include() function: from django.urls import include, path\r\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\r\n\"\"\"\r\nfrom django.contrib import admin\r\nfrom django.urls import path, include\r\nfrom django.conf.urls import url\r\nfrom .import views\r\nfrom rest_framework.routers import DefaultRouter\r\nfrom .views import  MapView, dataset, QueryForm, SurveyListView\r\nfrom django.contrib.staticfiles.urls import staticfiles_urlpatterns\r\n\r\n\r\n\r\n\r\nurlpatterns = [\r\n    url(r'^$', MapView, name='home'),\r\n    url(r'^data/$', dataset, name='data'),\r\n    url(r'^form/$', QueryForm, name='form'),\r\n    url(r'^surveys/$', SurveyListView.as_view(), name='surveys')\r\n]\r\n\r\nurlpatterns += staticfiles_urlpatterns()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web_interface/surveydb/bokehMap/urls.py	(revision 96589884523ce3cb8a02b91b27f7055e11a75a16)
+++ web_interface/surveydb/bokehMap/urls.py	(date 1589209838551)
@@ -18,7 +18,7 @@
 from django.conf.urls import url
 from .import views
 from rest_framework.routers import DefaultRouter
-from .views import  MapView, dataset, QueryForm, SurveyListView
+from .views import  MapView, dataset, QueryForm, SurveyListView, DirListView
 from django.contrib.staticfiles.urls import staticfiles_urlpatterns
 
 
@@ -28,7 +28,8 @@
     url(r'^$', MapView, name='home'),
     url(r'^data/$', dataset, name='data'),
     url(r'^form/$', QueryForm, name='form'),
-    url(r'^surveys/$', SurveyListView.as_view(), name='surveys')
+    url(r'^surveys/$', SurveyListView.as_view(), name='surveys'),
+    url(r'^browse/$', DirListView.as_view(), name='browse')
 ]
 
 urlpatterns += staticfiles_urlpatterns()
\ No newline at end of file
Index: web_interface/surveydb/surveydb/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for surveydb project.\r\n\r\nGenerated by 'django-admin startproject' using Django 3.0.5.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/3.0/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/3.0/ref/settings/\r\n\"\"\"\r\n\r\nimport os\r\n\r\n\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nfrom django.conf.global_settings import STATICFILES_DIRS\r\n\r\nBASE_DIR = os.path.dirname( os.path.dirname( os.path.abspath( __file__ ) ) )\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = '2avjf+ljy4c-+07e^jq2(bdk93$r(k5+x-t3y_scb3i#w-mljg'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = ['*']\r\n\r\nif os.name == 'nt':\r\n    import platform\r\n\r\n    OSGEO4W = r\"C:\\OSGeo4W\"\r\n    if '64' in platform.architecture()[0]:\r\n        OSGEO4W += \"64\"\r\n    assert os.path.isdir( OSGEO4W ), \"Directory does not exist: \" + OSGEO4W\r\n    os.environ['OSGEO4W_ROOT'] = OSGEO4W\r\n    os.environ['GDAL_DATA'] = OSGEO4W + r\"\\share\\gdal\"\r\n    os.environ['PROJ_LIB'] = OSGEO4W + r\"\\share\\proj\"\r\n    os.environ['PATH'] = OSGEO4W + r\"\\bin;\" + os.environ['PATH']\r\n\r\nGDAL_LIBRARY_PATH = r'C:\\OSGeo4W64\\bin\\gdal300'\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'bokehMap.apps.BokehmapConfig',\r\n    'django.contrib.gis',\r\n    'rest_framework',\r\n    'rest_framework_gis',\r\n    'django_filters',\r\n    'leaflet',\r\n    'multiselectfield',\r\n    'mapwidgets',\r\n    ]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'surveydb.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'surveydb.wsgi.application'\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.contrib.gis.db.backends.spatialite',\r\n        'NAME': os.path.join( BASE_DIR, 'db.sqlite3' ),\r\n    }\r\n}\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\r\n\r\nSTATIC_URL = '/static/'\r\n\r\nSTATICFILES_DIRS = [\r\n    os.path.join(BASE_DIR, 'static'),\r\n]\r\n\r\nLEAFLET_CONFIG = {\r\n  'DEFAULT_CENTER': (22.375,114.126),\r\n  'DEFAULT_ZOOM': 11,\r\n  'MIN_ZOOM': 1,\r\n  'MAX_ZOOM': 20,\r\n    'TILES': ''\r\n}\r\n\r\nMAP_WIDGETS = {\r\n    \"GooglePointFieldWidget\": (\r\n        (\"zoom\", 11),\r\n        (\"mapCenterLocation\", [22.315,114.176]),\r\n        (\"markerFitZoom\", 11),\r\n        (\"MINIFED\", False)\r\n    ),\r\n    \"GOOGLE_MAP_API_KEY\": 'AIzaSyB1ahSJjh6TtRwXmLOCTJ6eDY_dchw5v4s',\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web_interface/surveydb/surveydb/settings.py	(revision 96589884523ce3cb8a02b91b27f7055e11a75a16)
+++ web_interface/surveydb/surveydb/settings.py	(date 1589213577669)
@@ -59,6 +59,8 @@
     'leaflet',
     'multiselectfield',
     'mapwidgets',
+    'grappelli',
+    'filebrowser',
     ]
 
 MIDDLEWARE = [
@@ -139,6 +141,7 @@
 
 STATICFILES_DIRS = [
     os.path.join(BASE_DIR, 'static'),
+    r'C:\Users\ngwin'
 ]
 
 LEAFLET_CONFIG = {
Index: web_interface/surveydb/bokehMap/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\n\r\nfrom django.shortcuts import render\r\nfrom django.http import HttpResponse\r\nfrom django.utils.html import escapejs\r\nfrom django.utils.safestring import mark_safe\r\nfrom django.views.generic import TemplateView\r\n\r\nfrom bokeh.embed import components\r\nfrom bokeh.models import HoverTool\r\nfrom bokeh.plotting import figure\r\n\r\nfrom rest_framework_gis.serializers import (\r\n    GeoFeatureModelSerializer\r\n)\r\nfrom .models import Survey, Location, Time\r\nfrom rest_framework.viewsets import ReadOnlyModelViewSet\r\nfrom rest_framework_gis.filters import InBBoxFilter\r\n\r\nfrom django.core.serializers import serialize\r\nimport datetime\r\nfrom functools import reduce\r\nfrom django.db.models import Q\r\nfrom django import forms\r\n\r\nfrom django.contrib.auth import login, authenticate\r\nfrom django.contrib.auth.forms import UserCreationForm\r\nfrom django.shortcuts import render, redirect\r\nfrom django.views.generic.list import ListView\r\n\r\nfrom .models import Survey\r\n\r\n# Create your views here.\r\n\r\nclass QueryForm( forms.Form ):\r\n    publish_date_before = forms.DateField(\r\n        label='',\r\n        required=False,\r\n        # initial = datetime.datetime.now(),\r\n        widget=forms.TextInput(\r\n            attrs={\r\n                'class': 'form-control',\r\n                'id': 'datepicker1',\r\n                'placeholder': 'published before'\r\n            } ) )\r\n\r\n    publish_date_after = forms.DateField(\r\n        label='',\r\n        required=False,\r\n        # initial = datetime.datetime.now(),\r\n        widget=forms.TextInput(\r\n            attrs={\r\n                'class': 'form-control',\r\n                'id': 'datepicker2',\r\n                'placeholder': 'published after'\r\n            } ) )\r\n\r\n    keywords = forms.CharField(\r\n        required=False,\r\n        label='',\r\n        widget=forms.TextInput(\r\n\r\n            attrs={\r\n                'class': 'form-control',\r\n                'placeholder': 'space-separated words matching title, synopsis, website or tags'\r\n            } ) )\r\n\r\ndef filter_books(Location, paramDict):\r\n    # paramDict = request.GET\r\n    params = paramDict.keys()\r\n\r\n    # data filtering\r\n    if any( x != '' for x in paramDict.values() ):\r\n        if paramDict['input-number-min'] != '':\r\n            after_date = paramDict['input-number-min']\r\n            _after_date = datetime.date(after_date, 1, 1)\r\n            Location = Location.filter( SurveyID__IssueDate__gte=_after_date )\r\n\r\n        if paramDict['input-number-max'] != '':\r\n            before_date  = paramDict['input-number-max']\r\n            _before_date  = datetime.date(before_date, 12, 31)\r\n            Location = Location.filter( SurveyID__IssueDate__lte=_before_date  )\r\n\r\n        # filters records that contain any of the following keywords\r\n        if paramDict['keywords'] != '':\r\n            kws = paramDict['keywords'].split()\r\n            q_lookups = [Q( SurveyID__JobNumber__icontains=kw ) for kw in kws] + \\\r\n                        [Q( SurveyID__Survey__icontains=kw ) for kw in kws] + \\\r\n                        [Q( SurveyID__Project__icontains=kw ) for kw in kws]\r\n            filters = Q()\r\n            filters |= reduce( lambda x, y: x | y, q_lookups )\r\n            Location = Location.filter( filters )\r\n\r\n    return Location\r\n\r\ndef MapView(request):\r\n    locations = Location.objects.all()\r\n\r\n\r\n    form = QueryForm(request.GET or None)\r\n    paramDict = request.GET\r\n    locations = filter_books(locations, paramDict)\r\n    survey = serialize( 'geojson', locations, fields=('SurveyID', 'Survey', 'location'), indent=2,\r\n                        use_natural_foreign_keys=True, use_natural_primary_keys=False )\r\n    context = {\r\n        'survey':mark_safe(escapejs(json.dumps(survey))),\r\n        'form':form}\r\n    return render(request, 'index2.html', context)\r\n\r\nclass HomepageVIew( TemplateView ):\r\n    template_name = 'index.html'\r\n\r\n\r\ndef dataset(request):\r\n    survey = data_get()\r\n    return HttpResponse( survey, content_type='json' )\r\n\r\ndef data_get(locations=Location):\r\n    survey = serialize( 'geojson', Location.objects.all(), fields=('SurveyID', 'location'), indent=2,\r\n                        use_natural_foreign_keys=True, use_natural_primary_keys=False )\r\n    return survey\r\n\r\n\r\n\r\nclass SurveyListView(ListView):\r\n\r\n    model = Survey\r\n    paginate_by = 100  # if pagination is desired\r\n    template_name = 'surveys.html'\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super().get_context_data(**kwargs)\r\n        return context\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web_interface/surveydb/bokehMap/views.py	(revision 96589884523ce3cb8a02b91b27f7055e11a75a16)
+++ web_interface/surveydb/bokehMap/views.py	(date 1589212968685)
@@ -29,6 +29,7 @@
 from django.views.generic.list import ListView
 
 from .models import Survey
+import os
 
 # Create your views here.
 
@@ -132,3 +133,24 @@
         context = super().get_context_data(**kwargs)
         return context
 
+path = r'C:\Users\ngwin'
+
+
+class FileObject():
+
+    name = ''
+
+    def __init__(self, name):
+        self.name = name
+        self.link = ''
+
+class DirListView(ListView):
+
+    template_name = 'browse.html'
+
+    def get_queryset(self):
+        files = []
+        for filename in os.listdir(path):
+            fileobject = FileObject(name=filename)
+            files.append(fileobject)
+        return files
\ No newline at end of file
Index: web_interface/surveydb/bokehMap/templates/browse.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web_interface/surveydb/bokehMap/templates/browse.html	(date 1589212364963)
+++ web_interface/surveydb/bokehMap/templates/browse.html	(date 1589212364963)
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+
+<table>
+{% for file in object_list %}
+                                                <tr>
+                                                    <td> {{ file.name }} </td>
+                                                </tr>
+                                            {% empty %}
+                                                <tr>No survey yet.</tr>
+                                            {% endfor %}
+</table>
+</body>
+</html>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.7\" project-jdk-type=\"Python SDK\" />\r\n  <component name=\"PyCharmProfessionalAdvertiser\">\r\n    <option name=\"shown\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 96589884523ce3cb8a02b91b27f7055e11a75a16)
+++ .idea/misc.xml	(date 1589202046390)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (Saturn) (2)" project-jdk-type="Python SDK" />
   <component name="PyCharmProfessionalAdvertiser">
     <option name="shown" value="true" />
   </component>
Index: .idea/SurveyDatabase.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.7\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/SurveyDatabase.iml	(revision 96589884523ce3cb8a02b91b27f7055e11a75a16)
+++ .idea/SurveyDatabase.iml	(date 1589202046385)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.7" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.7 (Saturn) (2)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
